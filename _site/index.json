{
  "ASE_Riya_Shah_77356825/README.html": {
    "href": "ASE_Riya_Shah_77356825/README.html",
    "title": "ASE Portfolio | ASE_Riya_Shah_77356825",
    "keywords": "ASE Portfolio Fill in the fields below. Your Name:Riya Shah Your Group:C Your Tutor:R.Pun Student Id: c7356825 Keep your progress up to date below. Put \"DONE\" after each section, when you have done it. Checkpoint 1 Version Control (1) 5 marks: DONE At least two documented commits to provided on GitHub Classroom BEFORE 12pm 7th October. At least 5 documented commits. Readme.md file filled in correctly. 2 Unit Tests for basic drawing commands above (1) 5 marks: DONE Unit Test for moveto command (variables storing pen position are correct) Unit Test for drawTo command (variables storing pen position are correct) Unit Test for a multiline program. 3 XML Comments/documentation produced (1) 5 marks*: DONE Fully documented with XML comments and Documentation web site produced 4 Exception Handling (1) 5 marks*: DONE 5 Library (DLL) installed and working with reasonable user interface (2) 10 marks: DONE Form interface with program window, output window and run button BOOSE DLL library installed call about method and display returned information in output/debug window you can use System.Diagnostics to output to the debug window 6 Basic drawing commands of the library are implemented (2) 10 marks:DONE Moveto, circle, rect, pencolour, write. Unrestricted drawing programs can be run (1unrestrictedDrawing.boose) Tutor's Feedback Final Submission 1 Further Version Control (1) 5 marks You must continue to use VC to a professional standard with frequent and clear commits Your Readme.md must be up to date 2 Use of Interfaces (1) 5 marks Interfaces to be used for all classes where appropriate ---->DONE 3 Further Unit Testing (1) 5 marks Tests for full program all of the facilities completed in 5,6 and 7 below It is up to you how design your tests (i.e. one test per facility or one test testing many but they must be clearly documented with XML comments) 4 Design Patterns (1) 5 marks Use of factory Design Pattern for command creation Demonstrate the use of another design pattern of your choice (for 5,6 and 7 you can click the links to see the example BOOSE programs that must be run, these are in your Portfolio. You must run the unrestricted programs and replace the image already there with an image of your BOOSE Interpreter running the BOOSE programs. You may show further programs in your portfolio.) 5 Replaced variables (2) Int 4 marks Real 4 marks Array 5 marks 6 Replaced if, while, for (2) While 5 marks For 6 marks If else 6 marks 7 Replaced Methods (2) 5 marks 8 Additional (web version, text-based version, extension to BOOSE itself, etc, discuss with your tutor) (2) 10 marks Tutor's Feedback note Remember that the BOOSE library is a work in progress and is likely to have bug fixes and updates. Check Discord and/or myBeckett to see if updates have been released. Report any bugs to @dmullier\\ v1.0"
  },
  "README - Copy.html": {
    "href": "README - Copy.html",
    "title": "ASE Portfolio | ASE_Riya_Shah_77356825",
    "keywords": "ASE Portfolio Fill in the fields below. Your Name:Riya Shah Your Group:C Your Tutor:R.Pun Student Id: c7356825 Keep your progress up to date below. Put \"DONE\" after each section, when you have done it. Checkpoint 1 Version Control (1) 5 marks: DONE At least two documented commits to provided on GitHub Classroom BEFORE 12pm 7th October. At least 5 documented commits. Readme.md file filled in correctly. 2 Unit Tests for basic drawing commands above (1) 5 marks: DONE Unit Test for moveto command (variables storing pen position are correct) Unit Test for drawTo command (variables storing pen position are correct) Unit Test for a multiline program. 3 XML Comments/documentation produced (1) 5 marks*: DONE Fully documented with XML comments and Documentation web site produced 4 Exception Handling (1) 5 marks*: DONE 5 Library (DLL) installed and working with reasonable user interface (2) 10 marks: DONE Form interface with program window, output window and run button BOOSE DLL library installed call about method and display returned information in output/debug window you can use System.Diagnostics to output to the debug window 6 Basic drawing commands of the library are implemented (2) 10 marks:DONE Moveto, circle, rect, pencolour, write. Unrestricted drawing programs can be run (1unrestrictedDrawing.boose) Tutor's Feedback Final Submission 1 Further Version Control (1) 5 marks You must continue to use VC to a professional standard with frequent and clear commits Your Readme.md must be up to date 2 Use of Interfaces (1) 5 marks Interfaces to be used for all classes where appropriate 3 Further Unit Testing (1) 5 marks Tests for full program all of the facilities completed in 5,6 and 7 below It is up to you how design your tests (i.e. one test per facility or one test testing many but they must be clearly documented with XML comments) 4 Design Patterns (1) 5 marks Use of factory Design Pattern for command creation Demonstrate the use of another design pattern of your choice (for 5,6 and 7 you can click the links to see the example BOOSE programs that must be run, these are in your Portfolio. You must run the unrestricted programs and replace the image already there with an image of your BOOSE Interpreter running the BOOSE programs. You may show further programs in your portfolio.) 5 Replaced variables (2) Int 4 marks Real 4 marks Array 5 marks 6 Replaced if, while, for (2) While 5 marks For 6 marks If else 6 marks 7 Replaced Methods (2) 5 marks 8 Additional (web version, text-based version, extension to BOOSE itself, etc, discuss with your tutor) (2) 10 marks Tutor's Feedback note Remember that the BOOSE library is a work in progress and is likely to have bug fixes and updates. Check Discord and/or myBeckett to see if updates have been released. Report any bugs to @dmullier\\ v1.0"
  },
  "README.html": {
    "href": "README.html",
    "title": "ASE Portfolio | ASE_Riya_Shah_77356825",
    "keywords": "ASE Portfolio Fill in the fields below. Your Name:Riya Shah Your Group:C Your Tutor:R.Pun Student Id: c7356825 Keep your progress up to date below. Put \"DONE\" after each section, when you have done it. Checkpoint 1 Version Control (1) 5 marks: DONE At least two documented commits to provided on GitHub Classroom BEFORE 12pm 7th October. At least 5 documented commits. Readme.md file filled in correctly. 2 Unit Tests for basic drawing commands above (1) 5 marks: DONE Unit Test for moveto command (variables storing pen position are correct) Unit Test for drawTo command (variables storing pen position are correct) Unit Test for a multiline program. 3 XML Comments/documentation produced (1) 5 marks*: DONE Fully documented with XML comments and Documentation web site produced 4 Exception Handling (1) 5 marks*: DONE 5 Library (DLL) installed and working with reasonable user interface (2) 10 marks: DONE Form interface with program window, output window and run button BOOSE DLL library installed call about method and display returned information in output/debug window you can use System.Diagnostics to output to the debug window 6 Basic drawing commands of the library are implemented (2) 10 marks:DONE Moveto, circle, rect, pencolour, write. Unrestricted drawing programs can be run (1unrestrictedDrawing.boose) Tutor's Feedback Final Submission 1 Further Version Control (1) 5 marks You must continue to use VC to a professional standard with frequent and clear commits Your Readme.md must be up to date 2 Use of Interfaces (1) 5 marks Interfaces to be used for all classes where appropriate 3 Further Unit Testing (1) 5 marks Tests for full program all of the facilities completed in 5,6 and 7 below It is up to you how design your tests (i.e. one test per facility or one test testing many but they must be clearly documented with XML comments) 4 Design Patterns (1) 5 marks Use of factory Design Pattern for command creation Demonstrate the use of another design pattern of your choice (for 5,6 and 7 you can click the links to see the example BOOSE programs that must be run, these are in your Portfolio. You must run the unrestricted programs and replace the image already there with an image of your BOOSE Interpreter running the BOOSE programs. You may show further programs in your portfolio.) 5 Replaced variables (2) Int 4 marks Real 4 marks Array 5 marks 6 Replaced if, while, for (2) While 5 marks For 6 marks If else 6 marks 7 Replaced Methods (2) 5 marks 8 Additional (web version, text-based version, extension to BOOSE itself, etc, discuss with your tutor) (2) 10 marks Tutor's Feedback note Remember that the BOOSE library is a work in progress and is likely to have bug fixes and updates. Check Discord and/or myBeckett to see if updates have been released. Report any bugs to @dmullier\\ v1.0"
  },
  "api/ASE_Riya_Shah_77356825.AppStoredProgram.html": {
    "href": "api/ASE_Riya_Shah_77356825.AppStoredProgram.html",
    "title": "Class AppStoredProgram | ASE_Riya_Shah_77356825",
    "keywords": "Class AppStoredProgram Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class AppStoredProgram : StoredProgram, IList, ICollection, IEnumerable, ICloneable, IStoredProgram Inheritance object ArrayList StoredProgram AppStoredProgram Implements IList ICollection IEnumerable ICloneable IStoredProgram Inherited Members StoredProgram.FindVariable(Evaluation) ArrayList.Adapter(IList) ArrayList.Add(object) ArrayList.AddRange(ICollection) ArrayList.BinarySearch(int, int, object, IComparer) ArrayList.BinarySearch(object) ArrayList.BinarySearch(object, IComparer) ArrayList.Clear() ArrayList.Clone() ArrayList.Contains(object) ArrayList.CopyTo(Array) ArrayList.CopyTo(Array, int) ArrayList.CopyTo(int, Array, int, int) ArrayList.FixedSize(ArrayList) ArrayList.FixedSize(IList) ArrayList.GetEnumerator() ArrayList.GetEnumerator(int, int) ArrayList.GetRange(int, int) ArrayList.IndexOf(object) ArrayList.IndexOf(object, int) ArrayList.IndexOf(object, int, int) ArrayList.Insert(int, object) ArrayList.InsertRange(int, ICollection) ArrayList.LastIndexOf(object) ArrayList.LastIndexOf(object, int) ArrayList.LastIndexOf(object, int, int) ArrayList.ReadOnly(ArrayList) ArrayList.ReadOnly(IList) ArrayList.Remove(object) ArrayList.RemoveAt(int) ArrayList.RemoveRange(int, int) ArrayList.Repeat(object, int) ArrayList.Reverse() ArrayList.Reverse(int, int) ArrayList.SetRange(int, ICollection) ArrayList.Sort() ArrayList.Sort(IComparer) ArrayList.Sort(int, int, IComparer) ArrayList.Synchronized(ArrayList) ArrayList.Synchronized(IList) ArrayList.ToArray() ArrayList.ToArray(Type) ArrayList.TrimToSize() ArrayList.Capacity ArrayList.Count ArrayList.IsFixedSize ArrayList.IsReadOnly ArrayList.IsSynchronized ArrayList.this[int] ArrayList.SyncRoot object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppStoredProgram(ICanvas) public AppStoredProgram(ICanvas _canvas) Parameters _canvas ICanvas Fields SyntaxOk public bool SyntaxOk Field Value bool Properties PC public override int PC { get; set; } Property Value int Methods Add(Command) public override int Add(Command C) Parameters C Command Returns int AddMethod(Method) public override void AddMethod(Method M) Parameters M Method AddVariable(Evaluation) public override void AddVariable(Evaluation Variable) Parameters Variable Evaluation Commandsleft() public override bool Commandsleft() Returns bool DeleteVariable(string) public override void DeleteVariable(string varName) Parameters varName string EvaluateExpression(string) public override string EvaluateExpression(string Exp) Parameters Exp string Returns string EvaluateExpressionWithString(string) public override string EvaluateExpressionWithString(string expression) Parameters expression string Returns string FindVariable(string) public override int FindVariable(string varName) Parameters varName string Returns int GetMethod(string) public override Method GetMethod(string MethodName) Parameters MethodName string Returns Method GetVarValue(string) public override string GetVarValue(string varName) Parameters varName string Returns string GetVariable(int) public override Evaluation GetVariable(int index) Parameters index int Returns Evaluation GetVariable(string) public override Evaluation GetVariable(string VarName) Parameters VarName string Returns Evaluation IsExpression(string) public override bool IsExpression(string expression) Parameters expression string Returns bool NextCommand() public override object NextCommand() Returns object Pop() public override ConditionalCommand Pop() Returns ConditionalCommand Push(ConditionalCommand) public override void Push(ConditionalCommand Com) Parameters Com ConditionalCommand ResetProgram() public virtual void ResetProgram() Run() public override void Run() UpdateVariable(string, bool) public override void UpdateVariable(string varName, bool value) Parameters varName string value bool UpdateVariable(string, double) public override void UpdateVariable(string varName, double value) Parameters varName string value double UpdateVariable(string, int) public override void UpdateVariable(string varName, int value) Parameters varName string value int VariableExists(string) public override bool VariableExists(string varName) Parameters varName string Returns bool"
  },
  "api/ASE_Riya_Shah_77356825.ArrayApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.ArrayApp.html",
    "title": "Class ArrayApp | ASE_Riya_Shah_77356825",
    "keywords": "Class ArrayApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents an application for working with arrays, supporting both integer and real number arrays. public class ArrayApp : Evaluation, ICommand Inheritance object Command Evaluation ArrayApp Implements ICommand Derived PeekApp PokeApp Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ArrayApp() Initializes a new instance of the ArrayApp class. public ArrayApp() Fields IntValue protected int IntValue Field Value int PEEK Constant value indicating a PEEK operation. protected const bool PEEK = false Field Value bool POKE Constant value indicating a POKE operation. public const bool POKE = true Field Value bool RealValue protected double RealValue Field Value double columnCurrent protected int columnCurrent Field Value int columnExpression protected string columnExpression Field Value string columnsCount protected int columnsCount Field Value int intArray protected int[,] intArray Field Value int[,] peekValue protected string peekValue Field Value string pokeValue protected string pokeValue Field Value string realArray protected double[,] realArray Field Value double[,] rowCurrent protected int rowCurrent Field Value int rowExpression protected string rowExpression Field Value string rowsCount protected int rowsCount Field Value int type The type of array (e.g., \"int\" or \"real\"). protected string type Field Value string Properties Columns Gets the number of columns in the array. protected int Columns { get; } Property Value int Rows Gets the number of rows in the array. protected int Rows { get; } Property Value int Methods ArrayRestrictions() Applies restrictions to the array operations. public void ArrayRestrictions() CheckParameters(string[]) Checks the parameters passed to the array for validity. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] List of parameters to validate. Compile() Compiles the array definition and validates its parameters. public override void Compile() Execute() Executes the array initialization. public override void Execute() GetIntArray(int, int) Gets a value from the integer array at the specified row and column. public virtual int GetIntArray(int row, int col) Parameters row int The row index. col int The column index. Returns int The value at the specified row and column. GetRealArray(int, int) Gets a value from the real number array at the specified row and column. public virtual double GetRealArray(int row, int col) Parameters row int The row index. col int The column index. Returns double The value at the specified row and column. ProcessArrayParametersCompile(bool) Processes the parameters for a compile-time array operation. protected virtual void ProcessArrayParametersCompile(bool isPokeOperation) Parameters isPokeOperation bool Indicates if the operation is a POKE operation. ProcessArrayParametersExecute(bool) Processes the parameters for a run-time array operation. protected virtual void ProcessArrayParametersExecute(bool isPokeOperation) Parameters isPokeOperation bool Indicates if the operation is a POKE operation. ReduceRestrictionCounter() Reduces the counter for array operation restrictions. protected void ReduceRestrictionCounter() SetIntArray(int, int, int) Sets a value in the integer array at the specified row and column. public virtual void SetIntArray(int value, int row, int col) Parameters value int The value to set. row int The row index. col int The column index. SetRealArray(double, int, int) Sets a value in the real number array at the specified row and column. public virtual void SetRealArray(double value, int row, int col) Parameters value double The value to set. row int The row index. col int The column index."
  },
  "api/ASE_Riya_Shah_77356825.BooleanApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.BooleanApp.html",
    "title": "Class BooleanApp | ASE_Riya_Shah_77356825",
    "keywords": "Class BooleanApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents an application for Boolean operations, extending the functionality of the BOOSE.Boolean class. public class BooleanApp : Boolean, ICommand Inheritance object Command Evaluation Boolean BooleanApp Implements ICommand Inherited Members Boolean.Compile() Boolean.Execute() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() Applies restrictions specific to Boolean operations. public override void Restrictions()"
  },
  "api/ASE_Riya_Shah_77356825.CastApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.CastApp.html",
    "title": "Class CastApp | ASE_Riya_Shah_77356825",
    "keywords": "Class CastApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command for casting between different variable types in a program. public class CastApp : Command, ICommand Inheritance object Command CastApp Implements ICommand Inherited Members Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods CheckParameters(string[]) Validates the parameters for the cast operation. public override void CheckParameters(string[] parameter) Parameters parameter string[] The parameters passed to the command. Exceptions CommandException Thrown if the number of parameters is invalid. Compile() Compiles the cast command, ensuring the source and target variables exist and are compatible. public override void Compile() Exceptions CommandException Thrown if the variables do not exist or the source variable is of an incompatible type. Execute() Executes the cast operation, converting the source variable's value to the target variable's type. public override void Execute() Exceptions InvalidCastException Thrown if the casting is invalid at runtime."
  },
  "api/ASE_Riya_Shah_77356825.ComdCircle.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdCircle.html",
    "title": "Class ComdCircle | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdCircle Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to draw a circle on a canvas. public class ComdCircle : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter ComdCircle Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdCircle() Initializes a new instance of the ComdCircle class. public ComdCircle() ComdCircle(Canvas, int) Initializes a new instance of the ComdCircle class with a specified canvas and radius. public ComdCircle(Canvas canvas, int radius) Parameters canvas Canvas The canvas on which the circle will be drawn. radius int The radius of the circle. Methods CheckParameters(string[]) public override void CheckParameters(string[] parameterList) Parameters parameterList string[] Execute() Executes the command to draw a circle on the canvas. public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.ComdClear.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdClear.html",
    "title": "Class ComdClear | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdClear Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to clear all elements from the canvas. public class ComdClear : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter ComdClear Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdClear() Initializes a new instance of the ComdClear class. public ComdClear() ComdClear(Canvas) Initializes a new instance of the ComdClear class with the specified canvas. public ComdClear(Canvas c) Parameters c Canvas The canvas to clear. Methods CheckParameters(string[]) Validates the parameters for the clear command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Remarks No parameters are required for this command, so no validation is performed. Execute() Executes the clear command, removing all elements from the canvas. public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.ComdDrawTo.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdDrawTo.html",
    "title": "Class ComdDrawTo | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdDrawTo Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class ComdDrawTo : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters ComdDrawTo Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdDrawTo() Initializes a new instance of the ComdDrawTo class. public ComdDrawTo() ComdDrawTo(Canvas, int, int) Initializes a new instance of the ComdDrawTo class with the specified canvas and coordinates. public ComdDrawTo(Canvas canvas, int x, int y) Parameters canvas Canvas The canvas to draw on. x int The x-coordinate to draw to. y int The y-coordinate to draw to. Exceptions RestrictionException Thrown when coordinates are negative. Methods CheckParameters(string[]) Validates the parameters for the draw-to command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Exceptions CommandException Thrown when the parameters are invalid. Execute() public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.ComdFill.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdFill.html",
    "title": "Class ComdFill | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdFill Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll A command class that fills a shape on the canvas based on the given text. public class ComdFill : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter ComdFill Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdFill() Initializes a new instance of the MyAppFill class. public ComdFill() ComdFill(Canvas, string) Initializes a new instance of the MyAppFill class with a canvas and text. public ComdFill(Canvas c, string text) Parameters c Canvas The canvas to apply the fill command. text string The text to determine the fill state. Exceptions ArgumentNullException Thrown if text is null. Methods CheckParameters(string[]) Checks if the parameters passed to the command are valid. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters passed to the command. Exceptions CommandException Thrown if the parameters are invalid. Execute() Executes the fill command by setting the filled state of the shape. public override void Execute() SetFilled(string) public void SetFilled(string isFilledStr) Parameters isFilledStr string"
  },
  "api/ASE_Riya_Shah_77356825.ComdMoveTo.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdMoveTo.html",
    "title": "Class ComdMoveTo | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdMoveTo Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to move the canvas cursor to specified coordinates. public class ComdMoveTo : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters ComdMoveTo Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdMoveTo() Initializes a new instance of the ComdMoveTo class. public ComdMoveTo() ComdMoveTo(Canvas, int, int) Initializes a new instance of the ComdMoveTo class with the specified canvas and coordinates. public ComdMoveTo(Canvas canvas, int x, int y) Parameters canvas Canvas The canvas on which the move command will be executed. x int The X-coordinate to move to. y int The Y-coordinate to move to. Exceptions RestrictionException Thrown when the coordinates exceed the allowed range (2000). Methods CheckParameters(string[]) Validates the parameters for the move-to command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] An array of strings representing the command parameters. Exceptions CommandException Thrown when: The number of parameters is not exactly two. Either parameter is not a non-negative integer or is out of the allowed range. Execute() Executes the move-to command, moving the canvas cursor to the specified coordinates. public override void Execute() Remarks The coordinates are validated before execution. If the coordinates exceed the allowed range or are invalid, an exception will be thrown. Exceptions RestrictionException Thrown when the coordinates exceed the allowed range (2000). IndexOutOfRangeException Thrown when parameter indices are invalid or out of range. Exception Thrown when an unexpected error occurs during execution."
  },
  "api/ASE_Riya_Shah_77356825.ComdPenColour.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdPenColour.html",
    "title": "Class ComdPenColour | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdPenColour Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to set the pen color using RGB values. public class ComdPenColour : CommandThreeParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters CommandThreeParameters ComdPenColour Implements ICommand Inherited Members CommandThreeParameters.param3 CommandThreeParameters.param3unprocessed CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdPenColour() Initializes a new instance of the ComdPenColour class. public ComdPenColour() ComdPenColour(Canvas, int, int, int) Initializes a new instance of the ComdPenColour class with the specified canvas and RGB values. public ComdPenColour(Canvas canvas, int r, int g, int b) Parameters canvas Canvas The canvas on which the pen color will be set. r int The red component of the color (0-255). g int The green component of the color (0-255). b int The blue component of the color (0-255). Methods CheckParameters(string[]) Validates the parameters for the pen color command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] An array of strings representing the RGB parameters. Exceptions CommandException Thrown when: The number of parameters is not exactly three. Any parameter is not an integer or is out of the range (0-255). Execute() Executes the command to set the pen color on the canvas. public override void Execute() Remarks RGB values must be validated to ensure they fall within the range of 0-255. If the values are invalid, an exception will be thrown. Exceptions RestrictionException Thrown when any RGB component is out of the allowed range (0-255). IndexOutOfRangeException Thrown when parameter indices are invalid or out of range. Exception Thrown when an unexpected error occurs during execution."
  },
  "api/ASE_Riya_Shah_77356825.ComdRectangle.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdRectangle.html",
    "title": "Class ComdRectangle | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdRectangle Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to draw a rectangle on a canvas. public class ComdRectangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters ComdRectangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdRectangle() Initializes a new instance of the ComdRectangle class. public ComdRectangle() ComdRectangle(Canvas, int, int) Initializes a new instance of the ComdRectangle class with the specified canvas, width, and height. public ComdRectangle(Canvas canvas, int width, int height) Parameters canvas Canvas The canvas on which to draw the rectangle. width int The width of the rectangle. height int The height of the rectangle. Methods CheckParameters(string[]) Validates the parameters for the rectangle command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Exceptions CommandException Thrown when the parameters are invalid. Execute() Executes the rectangle drawing command. public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.ComdReset.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdReset.html",
    "title": "Class ComdReset | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdReset Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to reset the canvas. public class ComdReset : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter ComdReset Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdReset() Initializes a new instance of the ComdReset class. public ComdReset() ComdReset(Canvas) Initializes a new instance of the ComdReset class with the specified canvas. public ComdReset(Canvas c) Parameters c Canvas The canvas to reset. Methods CheckParameters(string[]) Validates the parameters for the reset command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Remarks No parameters are required for this command, so no validation is performed. Execute() Executes the reset command, resetting the canvas to its default state. public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.ComdTriangle.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdTriangle.html",
    "title": "Class ComdTriangle | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdTriangle Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to draw a triangle on a canvas. public class ComdTriangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters ComdTriangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdTriangle() Initializes a new instance of the ComdTriangle class. public ComdTriangle() ComdTriangle(Canvas, int, int) Initializes a new instance of the ComdTriangle class with the specified canvas, base length, and height. public ComdTriangle(Canvas c, int baseLength, int height) Parameters c Canvas The canvas to draw the triangle on. baseLength int The base length of the triangle. height int The height of the triangle. Methods CheckParameters(string[]) Validates the parameters for the triangle command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Exceptions CommandException Thrown when the parameter list is invalid or incomplete. Execute() Executes the command to draw a triangle on the canvas. public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.ComdWriteText.html": {
    "href": "api/ASE_Riya_Shah_77356825.ComdWriteText.html",
    "title": "Class ComdWriteText | ASE_Riya_Shah_77356825",
    "keywords": "Class ComdWriteText Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command to write processed text on a canvas. public class ComdWriteText : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter ComdWriteText Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ComdWriteText() Initializes a new instance of the ComdWriteText class. public ComdWriteText() ComdWriteText(Canvas, string) Initializes a new instance of the ComdWriteText class with a canvas and text. public ComdWriteText(Canvas c, string text) Parameters c Canvas The canvas to write on. text string The text to be written on the canvas. Methods CheckParameters(string[]) Validates the parameters for the command. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters for the command. Exceptions CommandException Thrown if the number of parameters is invalid or the text parameter is null, empty, or whitespace. Execute() Executes the command to process and write the text on the canvas. public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.CompoundCommandApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.CompoundCommandApp.html",
    "title": "Class CompoundCommandApp | ASE_Riya_Shah_77356825",
    "keywords": "Class CompoundCommandApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class CompoundCommandApp : ConditionalCommandApp, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand ConditionalCommandApp CompoundCommandApp Implements ICommand Derived ElseApp EndApp IfApp WhileApp Inherited Members ConditionalCommandApp.Execute() ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors CompoundCommandApp() public CompoundCommandApp() Properties CorrespondingCommand public ConditionalCommand CorrespondingCommand { get; set; } Property Value ConditionalCommand Methods CheckParameters(string[]) public override void CheckParameters(string[] parameters) Parameters parameters string[] Compile() public override void Compile() ResetOrDecreaseCount(int) public void ResetOrDecreaseCount(int newValue) Parameters newValue int"
  },
  "api/ASE_Riya_Shah_77356825.ConditionalCommandApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.ConditionalCommandApp.html",
    "title": "Class ConditionalCommandApp | ASE_Riya_Shah_77356825",
    "keywords": "Class ConditionalCommandApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class ConditionalCommandApp : ConditionalCommand, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand ConditionalCommandApp Implements ICommand Derived CompoundCommandApp Inherited Members ConditionalCommand.endLineNumber ConditionalCommand.Compile() ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Execute() public override void Execute() ResetOrDecreaseCount(int) public void ResetOrDecreaseCount(int newValue) Parameters newValue int"
  },
  "api/ASE_Riya_Shah_77356825.ElseApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.ElseApp.html",
    "title": "Class ElseApp | ASE_Riya_Shah_77356825",
    "keywords": "Class ElseApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents the 'else' component of a conditional command in a program. public class ElseApp : CompoundCommandApp, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand ConditionalCommandApp CompoundCommandApp ElseApp Implements ICommand Inherited Members CompoundCommandApp.CorrespondingCommand CompoundCommandApp.ResetOrDecreaseCount(int) ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ElseApp() Initializes a new instance of the ElseApp class. public ElseApp() Properties CorrespondingEnd Gets or sets the BOOSE.End command associated with this 'else' command. public End CorrespondingEnd { get; set; } Property Value End Methods CheckParameters(string[]) Validates the parameters for the 'else' command. public override void CheckParameters(string[] parameters) Parameters parameters string[] An array of parameters to validate. Exceptions CommandException Thrown if the parameters are invalid or do not contain the expected keyword 'else'. Compile() Compiles the 'else' command by linking it to its corresponding command and setting its position in the program. public override void Compile() Exceptions InvalidOperationException Thrown if there is no corresponding command on the stack to link with. Execute() Executes the 'else' command, skipping the block if the condition of the corresponding command is true. public override void Execute()"
  },
  "api/ASE_Riya_Shah_77356825.EndApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.EndApp.html",
    "title": "Class EndApp | ASE_Riya_Shah_77356825",
    "keywords": "Class EndApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents the 'end' command used to terminate control structures such as 'if', 'while', 'for', and methods. public class EndApp : CompoundCommandApp, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand ConditionalCommandApp CompoundCommandApp EndApp Implements ICommand Inherited Members CompoundCommandApp.CorrespondingCommand CompoundCommandApp.CheckParameters(string[]) CompoundCommandApp.ResetOrDecreaseCount(int) ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors EndApp() Initializes a new instance of the EndApp class. public EndApp() Methods Compile() Compiles the 'end' command by validating and linking it to the corresponding control structure command. public override void Compile() Exceptions CommandException Thrown if the syntax of the corresponding command is invalid or does not match the expected format. Execute() Executes the 'end' command by performing the necessary operations for each control structure. public override void Execute() Exceptions CommandException Thrown if there is an issue with the control variable or if the loop step value results in a non-terminating loop."
  },
  "api/ASE_Riya_Shah_77356825.ForApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.ForApp.html",
    "title": "Class ForApp | ASE_Riya_Shah_77356825",
    "keywords": "Class ForApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class ForApp : For, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand For ForApp Implements ICommand Inherited Members For.Compile() For.LoopControlV For.From For.To For.Step ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Execute() public override void Execute() ResetOrDecreaseCount(int) public void ResetOrDecreaseCount(int newValue) Parameters newValue int"
  },
  "api/ASE_Riya_Shah_77356825.Form1.html": {
    "href": "api/ASE_Riya_Shah_77356825.Form1.html",
    "title": "Class Form1 | ASE_Riya_Shah_77356825",
    "keywords": "Class Form1 Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class Form1 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form1 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Form1() public Form1() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false."
  },
  "api/ASE_Riya_Shah_77356825.GlobalConfig.html": {
    "href": "api/ASE_Riya_Shah_77356825.GlobalConfig.html",
    "title": "Class GlobalConfig | ASE_Riya_Shah_77356825",
    "keywords": "Class GlobalConfig Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class GlobalConfig Inheritance object GlobalConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties IsFillEnabled Gets or sets the status of the file operation. public static bool IsFillEnabled { get; set; } Property Value bool Remarks Indicates whether the file operation status is active or inactive. Default value is false."
  },
  "api/ASE_Riya_Shah_77356825.IfApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.IfApp.html",
    "title": "Class IfApp | ASE_Riya_Shah_77356825",
    "keywords": "Class IfApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents the 'if' command used to define conditional logic in the program. public class IfApp : CompoundCommandApp, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand ConditionalCommandApp CompoundCommandApp IfApp Implements ICommand Inherited Members CompoundCommandApp.CorrespondingCommand CompoundCommandApp.CheckParameters(string[]) CompoundCommandApp.Compile() CompoundCommandApp.ResetOrDecreaseCount(int) ConditionalCommandApp.Execute() ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IfApp() Initializes a new instance of the IfApp class. public IfApp() Methods ReduceRestrictions() Reduces any restrictions or constraints specific to the 'if' command. protected void ReduceRestrictions() Remarks This method is a placeholder for additional logic that might handle restrictions or validations associated with the 'if' command."
  },
  "api/ASE_Riya_Shah_77356825.IntApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.IntApp.html",
    "title": "Class IntApp | ASE_Riya_Shah_77356825",
    "keywords": "Class IntApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents an integer-based variable or operation in the application. public class IntApp : Int, ICommand Inheritance object Command Evaluation Int IntApp Implements ICommand Inherited Members Int.Compile() Int.Execute() Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() Initializes restrictions or constraints specific to integer operations. public override void Restrictions() Remarks This method is a placeholder for implementing rules or validations that apply to integer variables or operations."
  },
  "api/ASE_Riya_Shah_77356825.MethodApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.MethodApp.html",
    "title": "Class MethodApp | ASE_Riya_Shah_77356825",
    "keywords": "Class MethodApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll public class MethodApp : Method, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand CompoundCommand Method MethodApp Implements ICommand Inherited Members Method.CheckParameters(string[]) Method.Compile() Method.Execute() Method.LocalVariables Method.MethodName Method.Type CompoundCommand.ReduceRestrictions() CompoundCommand.CorrespondingCommand ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors MethodApp() public MethodApp() Methods ResetOrDecreaseCount(int) public void ResetOrDecreaseCount(int newValue) Parameters newValue int ResetOrDecreaseMethodCount(int) public void ResetOrDecreaseMethodCount(int newValue) Parameters newValue int"
  },
  "api/ASE_Riya_Shah_77356825.MyAppCanvas.MyAppPraser.html": {
    "href": "api/ASE_Riya_Shah_77356825.MyAppCanvas.MyAppPraser.html",
    "title": "Class MyAppPraser | ASE_Riya_Shah_77356825",
    "keywords": "Class MyAppPraser Namespace ASE_Riya_Shah_77356825.MyAppCanvas Assembly ASE_Riya_Shah_77356825.dll Represents a parser for interpreting and executing commands within a program. public class MyAppPraser : IParser Inheritance object MyAppPraser Implements IParser Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MyAppPraser(CommandFactory, StoredProgram) public MyAppPraser(CommandFactory factory, StoredProgram program) Parameters factory CommandFactory program StoredProgram Methods ParseCommand(string) public virtual ICommand ParseCommand(string line) Parameters line string Returns ICommand ParseProgram(string) public virtual void ParseProgram(string program) Parameters program string"
  },
  "api/ASE_Riya_Shah_77356825.MyAppCanvas.MyCanvas.html": {
    "href": "api/ASE_Riya_Shah_77356825.MyAppCanvas.MyCanvas.html",
    "title": "Class MyCanvas | ASE_Riya_Shah_77356825",
    "keywords": "Class MyCanvas Namespace ASE_Riya_Shah_77356825.MyAppCanvas Assembly ASE_Riya_Shah_77356825.dll public class MyCanvas : ICanvas Inheritance object MyCanvas Implements ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors MyCanvas() public MyCanvas() Properties Filled public bool Filled { get; set; } Property Value bool PenColour public object PenColour { get; set; } Property Value object Xpos public int Xpos { get; set; } Property Value int Ypos public int Ypos { get; set; } Property Value int Methods Circle(int, bool) public void Circle(int radius, bool filled) Parameters radius int filled bool Clear() public void Clear() CountToLimit(int) public int CountToLimit(int limit) Parameters limit int Returns int DrawTo(int, int) public void DrawTo(int x, int y) Parameters x int y int EvaluateIfElse(bool, string, string) public string EvaluateIfElse(bool condition, string trueResult, string falseResult) Parameters condition bool trueResult string falseResult string Returns string ExecuteForLoop(int) public int ExecuteForLoop(int iterations) Parameters iterations int Returns int GetGraphics() public Graphics GetGraphics() Returns Graphics GetPenSize() public int GetPenSize() Returns int GetVariable<T>(string) public T GetVariable<T>(string name) Parameters name string Returns T Type Parameters T MoveTo(int, int) public void MoveTo(int x, int y) Parameters x int y int Rect(int, int, bool) public void Rect(int width, int height, bool filled) Parameters width int height int filled bool Reset() public void Reset() Set(int, int) public void Set(int xsize, int ysize) Parameters xsize int ysize int SetCanvas(Bitmap, Graphics) public void SetCanvas(Bitmap newBitmap, Graphics newGraphics) Parameters newBitmap Bitmap newGraphics Graphics SetColour(int, int, int) public void SetColour(int red, int green, int blue) Parameters red int green int blue int SetPenSize(int) public void SetPenSize(int size) Parameters size int SetVariable<T>(string, T) public void SetVariable<T>(string name, T value) Parameters name string value T Type Parameters T SumArray(string) public int SumArray(string arrayName) Parameters arrayName string Returns int Tri(int, int) public void Tri(int width, int height) Parameters width int height int WriteText(string) public void WriteText(string text) Parameters text string getBitmap() public object getBitmap() Returns object"
  },
  "api/ASE_Riya_Shah_77356825.MyAppCanvas.html": {
    "href": "api/ASE_Riya_Shah_77356825.MyAppCanvas.html",
    "title": "Namespace ASE_Riya_Shah_77356825.MyAppCanvas | ASE_Riya_Shah_77356825",
    "keywords": "Namespace ASE_Riya_Shah_77356825.MyAppCanvas Classes MyAppPraser Represents a parser for interpreting and executing commands within a program. MyCanvas"
  },
  "api/ASE_Riya_Shah_77356825.PeekApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.PeekApp.html",
    "title": "Class PeekApp | ASE_Riya_Shah_77356825",
    "keywords": "Class PeekApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command for peeking into an array and retrieving its value. public class PeekApp : ArrayApp, ICommand Inheritance object Command Evaluation ArrayApp PeekApp Implements ICommand Inherited Members ArrayApp.PEEK ArrayApp.POKE ArrayApp.type ArrayApp.IntValue ArrayApp.RealValue ArrayApp.rowsCount ArrayApp.columnsCount ArrayApp.intArray ArrayApp.realArray ArrayApp.pokeValue ArrayApp.peekValue ArrayApp.rowExpression ArrayApp.columnExpression ArrayApp.rowCurrent ArrayApp.columnCurrent ArrayApp.Rows ArrayApp.Columns ArrayApp.ArrayRestrictions() ArrayApp.ReduceRestrictionCounter() ArrayApp.ProcessArrayParametersCompile(bool) ArrayApp.ProcessArrayParametersExecute(bool) ArrayApp.SetIntArray(int, int, int) ArrayApp.SetRealArray(double, int, int) ArrayApp.GetIntArray(int, int) ArrayApp.GetRealArray(int, int) Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PeekApp() Initializes a new instance of the PeekApp class. public PeekApp() Methods CheckParameters(string[]) Validates the parameters for the Peek command. public override void CheckParameters(string[] parameters) Parameters parameters string[] The array of parameters to validate. Exceptions NotImplementedException Thrown when this method is not yet implemented. Compile() Compiles the Peek command and processes its parameters for array access. public override void Compile() Execute() Executes the Peek command to retrieve a value from the array. public override void Execute() Exceptions CommandException Thrown if the array type is unsupported."
  },
  "api/ASE_Riya_Shah_77356825.PokeApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.PokeApp.html",
    "title": "Class PokeApp | ASE_Riya_Shah_77356825",
    "keywords": "Class PokeApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a command for poking into an array and modifying its value. public class PokeApp : ArrayApp, ICommand Inheritance object Command Evaluation ArrayApp PokeApp Implements ICommand Inherited Members ArrayApp.PEEK ArrayApp.POKE ArrayApp.type ArrayApp.IntValue ArrayApp.RealValue ArrayApp.rowsCount ArrayApp.columnsCount ArrayApp.intArray ArrayApp.realArray ArrayApp.pokeValue ArrayApp.peekValue ArrayApp.rowExpression ArrayApp.columnExpression ArrayApp.rowCurrent ArrayApp.columnCurrent ArrayApp.Rows ArrayApp.Columns ArrayApp.ArrayRestrictions() ArrayApp.ReduceRestrictionCounter() ArrayApp.ProcessArrayParametersCompile(bool) ArrayApp.ProcessArrayParametersExecute(bool) ArrayApp.SetIntArray(int, int, int) ArrayApp.SetRealArray(double, int, int) ArrayApp.GetIntArray(int, int) ArrayApp.GetRealArray(int, int) Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors PokeApp() Initializes a new instance of the PokeApp class. public PokeApp() Methods CheckParameters(string[]) Validates the parameters for the Poke operation. public override void CheckParameters(string[] parameter) Parameters parameter string[] The array of parameters to validate. Exceptions CommandException Thrown when the number of parameters is invalid. Compile() Compiles the Poke command and processes its parameters for array access. public override void Compile() Execute() Executes the Poke command to modify a value in the array. public override void Execute() Set(StoredProgram, string) Sets the program and parameters for the Poke operation. public override void Set(StoredProgram program, string paramsList) Parameters program StoredProgram The program to associate with the operation. paramsList string The list of parameters for the operation."
  },
  "api/ASE_Riya_Shah_77356825.RealApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.RealApp.html",
    "title": "Class RealApp | ASE_Riya_Shah_77356825",
    "keywords": "Class RealApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a real number application, extending from the Real type. public class RealApp : Real, ICommand Inheritance object Command Evaluation Real RealApp Implements ICommand Inherited Members Real.Compile() Real.Execute() Real.Value Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods Restrictions() Defines restrictions for the Real application. public override void Restrictions()"
  },
  "api/ASE_Riya_Shah_77356825.WhileApp.html": {
    "href": "api/ASE_Riya_Shah_77356825.WhileApp.html",
    "title": "Class WhileApp | ASE_Riya_Shah_77356825",
    "keywords": "Class WhileApp Namespace ASE_Riya_Shah_77356825 Assembly ASE_Riya_Shah_77356825.dll Represents a while loop command in the application, extending the CompoundCommandApp. public class WhileApp : CompoundCommandApp, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand ConditionalCommandApp CompoundCommandApp WhileApp Implements ICommand Inherited Members CompoundCommandApp.CorrespondingCommand CompoundCommandApp.CheckParameters(string[]) CompoundCommandApp.Compile() CompoundCommandApp.ResetOrDecreaseCount(int) ConditionalCommandApp.Execute() ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.Restrictions() Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WhileApp() Initializes a new instance of the WhileApp class. public WhileApp() Methods ReduceRestrictions() Defines restrictions for the While loop command. protected void ReduceRestrictions()"
  },
  "api/ASE_Riya_Shah_77356825.html": {
    "href": "api/ASE_Riya_Shah_77356825.html",
    "title": "Namespace ASE_Riya_Shah_77356825 | ASE_Riya_Shah_77356825",
    "keywords": "Namespace ASE_Riya_Shah_77356825 Classes AppStoredProgram ArrayApp Represents an application for working with arrays, supporting both integer and real number arrays. BooleanApp Represents an application for Boolean operations, extending the functionality of the BOOSE.Boolean class. CastApp Represents a command for casting between different variable types in a program. ComdCircle Represents a command to draw a circle on a canvas. ComdClear Represents a command to clear all elements from the canvas. ComdDrawTo ComdFill A command class that fills a shape on the canvas based on the given text. ComdMoveTo Represents a command to move the canvas cursor to specified coordinates. ComdPenColour Represents a command to set the pen color using RGB values. ComdRectangle Represents a command to draw a rectangle on a canvas. ComdReset Represents a command to reset the canvas. ComdTriangle Represents a command to draw a triangle on a canvas. ComdWriteText Represents a command to write processed text on a canvas. CompoundCommandApp ConditionalCommandApp ElseApp Represents the 'else' component of a conditional command in a program. EndApp Represents the 'end' command used to terminate control structures such as 'if', 'while', 'for', and methods. ForApp Form1 GlobalConfig IfApp Represents the 'if' command used to define conditional logic in the program. IntApp Represents an integer-based variable or operation in the application. MethodApp PeekApp Represents a command for peeking into an array and retrieving its value. PokeApp Represents a command for poking into an array and modifying its value. RealApp Represents a real number application, extending from the Real type. WhileApp Represents a while loop command in the application, extending the CompoundCommandApp."
  },
  "api/TestProject.Tests.html": {
    "href": "api/TestProject.Tests.html",
    "title": "Class Tests | ASE_Riya_Shah_77356825",
    "keywords": "Class Tests Namespace TestProject Assembly TestProject.dll [TestClass] public class Tests Inheritance object Tests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ArrayVariable_ShouldStoreAndRetrieveValues() [TestMethod] public void ArrayVariable_ShouldStoreAndRetrieveValues() Circle_ShouldDrawCircle() [TestMethod] public void Circle_ShouldDrawCircle() Circle_ShouldHandleLargeRadius() [TestMethod] public void Circle_ShouldHandleLargeRadius() Circle_ShouldThrowExceptionForInvalidRadius() [TestMethod] [ExpectedException(typeof(CanvasException))] public void Circle_ShouldThrowExceptionForInvalidRadius() Clear_ShouldNotResetCanvasPosition() [TestMethod] public void Clear_ShouldNotResetCanvasPosition() DrawTo_ShouldDrawToFinalPosition() [TestMethod] public void DrawTo_ShouldDrawToFinalPosition() ForLoop_ShouldSumArrayElements() [TestMethod] public void ForLoop_ShouldSumArrayElements() For_ShouldExecuteLoopCorrectNumberOfTimes() [TestMethod] public void For_ShouldExecuteLoopCorrectNumberOfTimes() IfElse_ShouldChooseCorrectBranch() [TestMethod] public void IfElse_ShouldChooseCorrectBranch() IntVariable_ShouldStoreAndRetrieveValue() [TestMethod] public void IntVariable_ShouldStoreAndRetrieveValue() MoveTo_ShouldSetPenPosition() [TestMethod] public void MoveTo_ShouldSetPenPosition() RealVariable_ShouldStoreAndRetrieveValue() [TestMethod] public void RealVariable_ShouldStoreAndRetrieveValue() Rect_ShouldDrawRectangle() [TestMethod] public void Rect_ShouldDrawRectangle() Rect_ShouldThrowExceptionForInvalidDimensions() [TestMethod] [ExpectedException(typeof(CanvasException))] public void Rect_ShouldThrowExceptionForInvalidDimensions() SetColour_ShouldChangePenColour() [TestMethod] public void SetColour_ShouldChangePenColour() SetColour_ShouldThrowExceptionForInvalidColour() [TestMethod] [ExpectedException(typeof(CanvasException))] public void SetColour_ShouldThrowExceptionForInvalidColour() Setup() [TestInitialize] public void Setup() Tri_ShouldDrawTriangle() [TestMethod] public void Tri_ShouldDrawTriangle() Tri_ShouldThrowExceptionForInvalidHeight() [TestMethod] [ExpectedException(typeof(CanvasException))] public void Tri_ShouldThrowExceptionForInvalidHeight() Tri_ShouldThrowExceptionForZeroHeight() [TestMethod] [ExpectedException(typeof(CanvasException))] public void Tri_ShouldThrowExceptionForZeroHeight() WhileLoop_ShouldCountToLimit() [TestMethod] public void WhileLoop_ShouldCountToLimit() WriteText_ShouldDrawText() [TestMethod] public void WriteText_ShouldDrawText() WriteText_ShouldThrowExceptionForInvalidInput() [TestMethod] [ExpectedException(typeof(CanvasException))] public void WriteText_ShouldThrowExceptionForInvalidInput()"
  },
  "api/TestProject.html": {
    "href": "api/TestProject.html",
    "title": "Namespace TestProject | ASE_Riya_Shah_77356825",
    "keywords": "Namespace TestProject Classes Tests"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | ASE_Riya_Shah_77356825",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | ASE_Riya_Shah_77356825",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | ASE_Riya_Shah_77356825",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}